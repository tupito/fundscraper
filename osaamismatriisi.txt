Oliot 
1 osaa luoda luokasta olion
  OK -> esim. Program.cs:79
2 osaa luoda dynaamisen oliokokoelman
  OK -> esim. /Investments/Report.cs:41
3 osaa määritellä oliolle kentät ja metodit
  OK -> esim. /Investments/Report.cs
4 osaa määritellä näkyvyydet julkisiksi ja yksityisiksi
  OK -> esim. /Investments/Report.cs
5 osaa määritellä oliolle propertykenttiä
  OK -> esim. /Scrapers/RegionScraper.cs

Luokkarakenne 
1 osaa määritellä luokan, jossa on konstruktori
  OK -> esim. /Scrapers/Scraper.cs
2 osaa määritellä luokan, jossa on viite toiseen olioon 
  OK -> esim. /Investments/FundInvestment.cs
3 osaa määritellä luokan, jossa on viite oliokokoelmaan
  OK -> esim. /Investments/FundInvestmentCollection.cs
4 osaa määritellä luokan, joka perii yläluokan 
  OK -> esim. /Scrapers/RegionScraper.cs
5 osaa määritellä luokan, jossa hyödynnetään metodin ylikirjoittamista
  OK -> esim. /Scrapers/RegionScraper.cs

Rajapinnat 
1 osaa määritellä rajapinnan
  OK -> esim. Interfaces/IInvestment.cs
2 osaa määritellä rajapinnan toteuttavan luokan
  OK -> esim. Investments/FundInvestment.cs
3 osaa hyödyntää polymorfismia rajapinnan avulla
  OK -> esim. Investments/FundInvestment.cs:32
4 lähdekoodista on erotettu jokin osa rajapinnan avulla
  OK? -> Ei varsinaisesti rajapintojen avulla: Kansiorakenteen kokonaisuudet ovat kaikki omissa nimiavaruuksissaan, tietoa haetaan ulkopuolisesta palvelusta, json-sarjallistamista on käytetty.
5 lähdekoodista on erotettu useampi osa rajapintojen avulla
  OK? -> Ei varsinaisesti rajapintojen avulla: Kansiorakenteen kokonaisuudet ovat kaikki omissa nimiavaruuksissaan, tietoa haetaan ulkopuolisesta palvelusta, json-sarjallistamista on käytetty.

Dokumentointi 
1 lähdekoodi on luettavaa
  OK
2 lähdekoodi on jäsennelty
  OK
3 lähdekoodista on tehty luokkakaavio
  OK
4 lähdekoodissa on kommentteja
  OK
5 lähdekoodi on itsekommentoiva
  OK

Tallentaminen 
1 osaa tallentaa tekstiä tiedostoon
  OK -> esim. /Utilities/FileMethod.cs:64
2 osaa ladata tekstiä tiedostosta
  OK -> esim. /Utilities/FileMethod.cs:45
3 osaa tallentaa oliodatan tiedostoon
  OK -> esim. /Utilities/FileMethod.cs:30
4 osaa ladata oliodatan tiedostosta
  OK -> esim. /Utilities/FileMethod.cs:14
5 osaa hyödyntää oliodatan sarjallistamista
  OK -> esim. /Utilities/FileMethod.cs:14